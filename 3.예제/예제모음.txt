21.09.21_1회차
=======================================================================================================
*HTML 문법(기본, 링크, 사진, 표, 체크박스, 셀렉트, 버튼)
=======================================================================================================


































######################################################################################################
개념정리_웹프로그래밍, jsp, url, 도메인, 웹프로그래밍 작동과정

* 웹 프로그래밍이란?
- 웹 프로그래밍이란, 웹 어플리케이션을 구현하는 행위입니다.
- 웹 어플리케이션이란 웹을 기반으로 작동되는 프로그램입니다.
- 웹이란 1개 이상의 사이트가 연결되어 있는 인터넷 서비스의 한가지 형태입니다.
- 인터넷이란 1개 이상의 네트워크가 연결되어 있는 형태를 말합니다.




* 웹 어플리케이션의 장점
- 사용자: 별도의 설치 없이 프로그램을 사용할수 있기 때문에 접근성이 용이.
- 개발자: 사용자용 프로그램을 별도로 제작하지 않고, HTML을 이용하여 사용자UI를 구축하기 때문에,개발에 소요되는 시간과 노력이 줄어듬.


* JSP 웹어플리케이션의 장점.
1. 풍부한 java API 를 사용하여 제작됨.
1. JSP기반의 웹어플리케이션은 특정 운영체제가 아니더라도 호환성의 문제가 없음.
1. 실제 코드가 프로그램에서 노출되지 않기 때문에 보안상의 장점이 있음.


* HTTP 요청과 응답(HyperTextTransferProtocol)
- 브라우저를 통해 인터넷의 자원을 사용할 때 대부분의 경우 HTTP 프로토콜을 사용합니다.
- HTTP 프로토콜은 hyper text문서 즉, HTML 문서를 전송하는 프로토콜입니다.
- 브라우저가 서버의 페이지를 요청(request)하면 서버는 해당 파일을 찾은 다음 HTTP 
	응답(response)를 통해 클라이언트에 전송하는 방식으로 사용자의 요청을 처리합니다.
- 서버로부터 전송된 페이지를 응답페이지라고 하며, 브라우저는 이 응답페이지를 해석(렌더링)하여 화면에 보여줍니다.
-ui: 웹퍼블리셔(HTML,javascript등등) 
-서버: 서버개발자 (jsp)
-db: db개발자

ui ==== 서버 ==== DB

* JSP(Java Server Pages)
- JSP는 HTML 페이지를 만들기 위한 방법 중 하나입니다.
- JSP는 사용자가 코드를 작성한 다음 컴파일 과정을 거치지 않고 서버에서 실행시킬 수 있습니다.
- JSP는 웹 서버에 의해 서블릿으로 변환된 다음 실행됩니다.


* Java Servlets
- 서블릿은 서버에서 실행되는 자바 프로그램입니다.
- 서블릿이 사용자에 의해 요청되면 서버에서는 HTTP request에 응답하기 위해 웹  서버에서  서블릿  객체를 생성하고  
	이를  통해  사용 자의 요청을 처리합니다.

* URL http://192.110.332.11:80/
1. 프로토콜(protocol): 네트워크상에서 약속한 통신규약(HTTP, FTP, SMTP, POP, DHCP)
1. IP주소: 네트워크상에서 특정 컴퓨터를 식별할 수 있는 주소
1. Port 번호: IP주소가 컴퓨터를 식별할 수 있게 해준다면, 포트번호는 해당 컴퓨터의 구동되고 있는 프로그램을 구분할 수 있는 번호.
1. DNS(도메인): IP주소를 인간이 쉽게 외우도록 맵핑한 문자열.


* 웹 서버: 클라이언트의 요청(request)에 의해 정보를 제공해 주는 서버.

* 웹 브라우저: 웹 서버에 정보를 요청하고, 웹서버로부터 정보를 받는 매개체, 이 때 HTTP 프로토콜을 사용함.


* 웹 프로그래밍을 하기 위해 필요한 학습.
1. JAVA(서버, 웹프로그래밍): JAVA웹 어플리케이션을 구현하기 위한 선행학습.
1. HTML(UI,웹퍼블리싱): 웹 어플리케이션을 구현하기 위한 틀.
1. CSS(UI,웹퍼블리싱): 웹 어플리케이션의 레이아웃 및 스타일을 지정하는 언어.
1. JavaScript(UI,웹퍼블리싱): 클라이언트의 기능/동작을 구현하기 위한 언어.

HTML,CSS,JAVASCRIPT,SQL,PHP 등등 언어까지 독학: w3schools.com

######################################################################################################
































######################################################################################################
개념정리_HTML


* HTML
- Hyper Text Markup Language의 약자
- 정적인 웹페이지를 만드는 언어
- 메모장,한글,워드...문서작업이 가능한 프로그램에서는 모두 작성 가능하다.
- HTML 문서는 태그라는 명령어로 구성되어있다.
- 태그의 기본 형식

<태그이름>문서의 내용</태그이름> 여는태그	닫는태그

* HTML form 관련 태그
- input태그: 데이터를 입력하기 위해 사용되는 태그. 속성으로 태그의 종류를 지정합니다.
- type 속성: 태그의 종류를 지정
1. text: 일반적인 text데이터를 입력하기 위해 사용.
1. password: 로그인, 회원가입 페이지 등에서 비밀번호 입력을 하기 위해 사용.
1. checkbox: 데이터 값을 여러 개 전송해야 할 때 사용.
1. radio: 여러 개의 데이터 값 중에 한 개의 값만 전송해야 할 때 사용.
1. select: 리스트 형태의 데이터를 사용.
1. textarea: 여러 줄의 텍스트를 입력하기 위해 사용. 속성 cols와 rows로 행과 열의 크기를 지정.
1. file: 파일 업로드를 위해 사용.
1. button: 버튼 형태를 만들기 위해 사용. 속성으로 value를 지정하여 버튼 안에 들어갈 문자열을 입력.
1. submit: form내의 데이터를 서버로 전송할 때 사용.
1. reset: form내의 데이터를 초기화할 때 사용.


* JDK 설치
- java.sun.com 접속
- JAVA SE 1.8버전 다운로드
- 자바 환경변수 설정.
1. 시스템 변수에 새로만들기 JAVA_HOME에 jdk가 설치된 경로 지정.
1. 시스템 변수 Path에 편집을 눌러
;%JAVA_HOME%\bin;  추가.


* Eclipse 설치
- eclipse.org 접속
- JAVA EE버전 다운로드.


* tomcat  웹  서버 설치
- tomcat.apache.org/
- 톰캣 8.0 버전 http://localhost:8181/
######################################################################################################




























######################################################################################################
예제1)html생성 및 링크걸기



		<기본문법>
basic.text 생성
아래 출력결과가 나오도록 코딩(주석은 빼도됨)

basic.text를 브라우저에서 렌더링 가능한 문서로 변경(html)
브라우저에서 해당 파일을 렌더링하도록 더블클릭(더블클릭시 자동으로 브라우저가 켜지며 브라우저가 랜더링하여 출력해준다.)

소스코드보기하여 주석도확인




		<링크걸기> : 로컬내 파일경로를 이용하여 링크걸기, 리모트 서버의 URL을 이용하여 링크걸기
1)로컬영역에 있는 html파일로 링크걸기

파일만들기: img_link
기본입력
링크걸기: BASIC 페이지로 이동하기
	-이때 주소넣을땐 복사하면 역슬레쉬인데 일반슬레쉬로하여야함
		-로컬내에서 가져오는거니까 http:// 붙일필요없다. c:으로 시작하면됨 두개 콜른이 겹치면 문제생김

basic.html에서도 img_link.html을 링크하기
	-a의 속성 href으로 경로를 넣어줄때 역슬레쉬해도 상관없음
		-역슬레쉬와 일반 슬레쉬가 섞여도상관없음
			-근데 자바에서는 역슬러쉬를 넣으면 이스케이프문자(탈출문자)로 해석할수도 있으니까 일반슬레쉬로 해준다.
				-탈출문자: 문자열로 수용하지 않는 특수 기능을 가진 문자
	-단, 파일 확장자명인 .html을 안적고 파일이름만 적으면 경로를 못찾음

2)naver 서버로 접속하는 링크걸기

HTML 첫 연습!!!!!
2019년 4월 16일 오전 JSP수업입니다!!
Hello JSP~!!!
Hello JSP~!!!
Hello JSP~!!!
Hello JSP~!!!
Hello JSP~!!!
Hello JSP~!!!
lmg_link로 이동하려면 여기를 클릭
######################################################################################################


답:



<!-- HTML주석입니다. -->

<!-- 아래 문서(doctypehtml)는 html 표준 규약을 준수합니다.-->

<!DOCTYPE html>
<html> <!-- 좌측 태그 : html 문서의 시작-->
   <head> <!-- 페이지의 속성과 정보를 설정 -->
	<!--meta charset="EUC-KR"--> <!-- 페이지 인코딩을 한글로=>이거는 오히려 한글이깨지네. -->
     	<meta charset="UTF-8"> <!-- 엥 이거랑 위에꺼 즉 charset안하고 렌더링해도 한글잘뜨네? -->
     	<title>html기초 연습</title> <!-- 웹브라우저로 서버접속했을때(웹사이트접속) 사이트들 제일 위에 보이는 것, NAVER이런거-->
				<!-- 네이버 들어가서 소스보기해서 확인해봐라 title에 NAVER라 되어있다 -->
   </head>
   <body> <!-- 웹브라우저에 실제로 보여질 내용을 작성하는 태그 -->
     HTML 첫 연습!!!!! <br/> <!-- br태그는 줄개행임(java의 \n) -->
     2019년 4월 16일 오전 JSP수업입니다!!	
     <!-- h1 ~ h6 태그는 제목태그입니다. h1태그가 가장 글자 크기가 크며 h6가 가장 작은 글자크기를 가지고 있음. 
     해당하는 태그들은 자동으로 줄개행이
	     일어남 근데 여기 주석에서 엔터친건 반영안되겠지? 
			일자로 쭈욱보이려나? -->
     <h1>Hello JSP~!!!</h1>
     <h2>Hello JSP~!!!</h2>
     <h3>Hello JSP~!!!</h3>
     <h4>Hello JSP~!!!</h4>
     <h5>Hello JSP~!!!</h5>
     <h6>Hello JSP~!!!</h6>

	<a href="C:\IT\1.programming\8.JSP\JspStudy\2.workspace\HTML/img_link.html">lmg_link로 이동하려면 여기를 클릭</a>
   </body>
</html>


























######################################################################################################
예제2)이미지삽입, 절대/상대경로

		<이미지삽입1>
0)세팅
HTML폴더에 image 폴더만들기 -> image에 상어.jpg 넣기
HTML폴더에 금붕어.jpg 넣기
작업위치: image_link

0-2)속성
가로, 세로 : 200픽셀
경로: 절대경로 또는 상대경로
오류시 표시메세지: 금붕어그림, 상어그림

1)절대경로로 삽입
2)상대경로(현재 작성하는 html과 같은 경로상에 있는 파일이라면 경로생략하고 파일명.확장자만 적어도됨/디렉터리라면 안으로들어가면됨)
	-아마 리눅스처럼 ./가 생략된게 아닐까 싶다.
		-맞네
	-이전가기 ../
		-실무에선 관리편의상 절대경로를 많이사용(경로 바뀌거나했을때 상대경로면 찾기어려우니)





######################################################################################################


답:



<!doctype html>
<html>
<head>
	<meta charset="UTF-8">
	<title>ㅎㅎㅎ</title>
</head>
<body>


	<!-- 페이지 링크를 걸려면 a태그를 사용 -->
	<!-- a 태그의 href속성을 사용하여 연결할 페이지의 주소를 적습니다.-->

	<a href="C:/IT/1.programming/8.JSP/JspStudy/2.workspace/HTML/basic.html">BASIC 페이지로 이동하기</a>
	<hr/> <!-- 구분선을 만들어주는 태그-->
	<a href = "https://www.naver.com">네이버로 이동</a>
	<hr/>
	
	<!-- 페이지 내부에 이미지 삽입은 img태그를 사용합니다. 
		img태그의 src속성에 이미지 파일의 경로를 지정함-->
	<img src="C:/IT/1.programming/8.JSP/JspStudy/2.workspace/HTML/금붕어.jpg" width = "200px" 
		height = "200px" alt = "금붕어그림"/>
		<!-- 로딩실패로인해서 엑스박스가 뜨는 등의 경우 alt에서 입력한 문자열이 출력됨 -->
	<hr/>

	<img src="C:/IT/1.programming/8.JSP/JspStudy/2.workspace/HTML/image/상어.jpg" width = "200px" 
		height = "200px" alt = "상어그림"/>

	<hr/>
	<img src="금붕어.jpg" width = "200px" 
		height = "200px" alt = "금붕어그림"/>
		<!-- 로딩실패로인해서 엑스박스가 뜨는 등의 경우 alt에서 입력한 문자열이 출력됨 -->
	<hr/>

	<img src="image/상어.jpg" width = "200px" 
		height = "200px" alt = "상어그림"/>


</body>
</html>




































######################################################################################################
예제3)상대경로_(이미지삽입,링크삽입)

<상대경로를 이용한 이미지삽입+링크삽입> 

0)세팅
image폴더에 img_path.txt 파일생성

0-2)속성
가로, 세로 : 150픽셀 / 130픽셀
경로: 상대경로
오류시 표시메세지: 금붕어그림, 상어그림


1)사진삽입
2)사진을 링크로 삽입
	-그림을 클릭하면 basic.html로 가도록(상대경로로하라)


######################################################################################################



답:




<!doctype html>

<html>
<head>
	<meta charset="UTF-8">
	<title>img_path입니다.</title>
</head>
<body>
	<img src = "상어.jpg" alt = "상어그림"  width = "150px" height = "150px" />
	<hr/>
	
	<img src = "../금붕어.jpg" alt = "금붕어그림" width = "130px" height = "130px" />
	<hr/>

	<a href = "../basic.html">
		<img src="상어.jpg" width = "150px" 
			height = "200px" alt = "상어그림"/>		
	</a>
	<hr/>



</body>
</html>

<명령어>
시작할때 칠 태그 : html, head(meta,title), body
<html>

<head>
	<meta charset = "UTF-8">	: 웹사이트 문자기본포멧을 한글로함
	<title>빙고!</title> 		: 웹사이트타이틀로 보여지게됨
</head>
<body>
	<br/> : 줄개행  // 태그명을적고 바로 슬래쉬를 적는경우는 해당 태그로시작해서 여기서 끝난다 
			//즉 태그하나 자체가 단일기능을 수행한다는것인듯
	<a ref = "로컬내파일경로 혹은 remote URL"> </a> : 링크걸기
	<hr/> : 구분선추가
	<img src="절대or상대경로" width = "원하는픽셀" 
		height = "원하는픽셀" alt = "원하는메세지"/>
	<a ref = "로컬내파일경로 혹은 remote URL"> 			:그림을 링크로두기
		<img src="절대or상대경로" width = "원하는픽셀" 
		height = "원하는픽셀" alt = "원하는메세지"/>
	</a> : 
</body>
</html>





































######################################################################################################
예제4)표

0)세팅
HTML폴더에 table.html 파일 생성

0-2)속성
크기: 3행 4열
경계선: 유
정렬 : 가운데정렬

1)아래의 출력결과에서 경계선이 들어가도록 표를만들어라. 3행 4열
	

이름	나이	성별	주소
홍길동	43세	남자	서울시
박영희	45세	여자	세종시
######################################################################################################



답:



<!doctype html>
<html>
<head>
	<meta charset = "UTF-8">
	<title>table.html입니다.</title>
</head>
<body>
	<table border = "1" align = "center">
		<!-- table태그의 자식태그 tr은 표의 행을 나타냄 tr태그가 3개면 3행 즉 3줄짜리 표가 되는것임-->
		<tr> 
			<!-- tr의 자식태그 td는 항행에 들어갈 열들을 나타냄 현재상황이면 3행 4열짜리 표인거임-->
			<td>이름</td>
			<td>나이</td>
			<td>성별</td>
			<td>주소</td>
		</tr>
		<tr> 
			<td>홍길동</td>
			<td>43세</td>
			<td>남자</td>
			<td>서울시</td>
		</tr>
		<tr> 
			<td>박영희</td>
			<td>45세</td>
			<td>여자</td>
			<td>세종시</td>
		</tr>
	</table>
</body>
</html>




































######################################################################################################
예제5)입력창 버튼

0)세팅
HTML폴더에 input_form.html 파일 생성

0-2)속성


1)버튼

# 아이디: 입력창
# 비밀번호: 입력창

# 전공:  경영학    화학    한국미술    컴퓨터공학 //하나만 선택할수있는 동그란 박스(name은 major나 아무거나해라) 
# 취미:  독서   수면   축구   게임  # 지역: 
//취미는 다중선택가능한 네모박스 지역은 네모창을 클릭하면 아래로 쭉떨어져서 서울,부산 등등 볼수있게하고 네모누르기전에 기본값은 서울
		//서울경기세종제주

//콜른 뒤의 요소들은 모두 각각 공백이 두개식들어가게하라

//마지막에 버튼 2개를 나란히 만드는데 버튼명은 확인버튼과 초기화버튼 이다.
	-type 속성값은 각 이름을 보고 기능에 맞게 입력하시오.
	-기능에 맞게 입력해도 jsp나 javascript에서 먼가 조치를안하면 초기화 눌러도 체그박스나 입력값 없어지지않고 확인눌러도
		어디로 이동하지 않는다.

     
######################################################################################################



답:




<!doctype html>
<html>
<head>
	<meta charset = "UTF-8">
	<title>input_form입니다.</title>
</head>
<body>
	<h2>회원가입 양식</h2><hr/>
	<!-- input태그는 입력창을 만드는 태그입니다. type속성으로 여러가지를 지정할수 있습니다. -->
	# 아이디: <input type="text" /> <br />
	# 비밀번호: <input type="password" /> <br />
		<!-- input태그의 속성인 type의 value를 text로 넣으면 입력되는 양식이 모니터로 직접적으로 표시가되고,
			password를 넣으면 간접적으로 표시된다.(*형태) 
		참고로 br이나 input meta처럼 열고나서 닫는 태그가 없는 단일태그는 여는태그의 제일마지막에 종료의의미로 슬러쉬를
		넣어준다. 하지만 안넣어도 실행 잘된다. 정식문법은 넣는것이니 넣도록 하자-->

	<!-- radio 타입은 동그라미 체크버튼을 만듬. &bsp;는 스페이스바 명령임 &nbsp는 스페이스바 명령임 공백명령 마지막에
		입력되는 공백은 공백으로 안치고 문자와 문자사이만 공백으로치기때문에 마지막에 공백을넣으려면 nbsp를 넣어야함
	name을 똑같은걸로 맞춰줘야 같은 그룹으로 보고 name의 벨류가 같은녀석들 중에서 하나를 선택하게함-->
	# 전공: <input type = "radio" name = "major1" /> 경영학 			&nbsp;                 
	<input type = "radio" name = "major1" /> 화학 					&nbsp;
	<input type = "radio" name = "major1" /> 한국미술 &nbsp;
	<input type = "radio" name = "major1" /> 컴퓨터공학 		&nbsp; <br/>
	
	<!-- type의 value를 checkbox로 하면 다중선택 가능한 네모체크버튼을 만듬)
		이때 이렇게 네모인 박스모양을 바꾸고 이쁘게하는게 css라네 
		type을 button: 일반적인 버튼
			reset: 모든 체크박스나 입력값이 모두 사라짐-->
	# 취미:
	<input type="checkbox" name = "hobby" />    독서&nbsp;
	<input type="checkbox" name = "hobby" />            수면&nbsp;
	<input type="checkbox" name = "hobby" /> 축구&nbsp;
	<input type="checkbox" name = "hobby" /> 게임&nbsp;

	# 지역: 
	<select>
		<option>서울</option>
		<option>경기</option>
		<option>세종</option>
		<option>제주</option>
	</select> <br />

	<input type = "button" value = "확인" /> &nbsp;
	<input type = "reset" value = "초기화" /> &nbsp;
		<!-- 확인 및 초기화가 현재는 생기기만 한거고 다른걸 javascript나 jsp에서 추가조치해줘야함 --> 

</body>
</html>












































































































































21.09.22_2회차
=======================================================================================================
*개발환경, html&jsp 파일만드는법, jsp태그, servlet
=======================================================================================================












































































































######################################################################################################
개념정리_개발환경구축(java jdk설치_환경변수, eclips설치 및 환경설정, tomcat 서버설치, 이클립스에 서버연동 후 서버구동확인)

설치순서
java.sun.com 자바 스탠다드 에디션(java se) jdk8버전 설치
환경변수-> 시스템변수(JAVA_HOME)만들고 만든걸 path에 넣기
eclipse.org 이클립스 최신버전 설치(전에 자바수업에서는 jdk를 8로했으면 비슷하게 맞춰주라했는데 뭔가 다른듯)
	-window-preference-encoding입력(화면밝기는 어피어런스)
	-그후 아래에 나오는 general web이 잇음
	-general의 워크스페이스클릭 -> UTF-8(기본자바에서는 여기까지만 하면됨 하지만 우리는 웹프로그래밍해야하니까 웹설정도건드림)
	-css클릭->encoding select 란에 가서 korean, EUC-KR이라 되어있는걸 iso 10646/Unicode(UTF-8)로 변경
						-둘다 써도되지만 iso가 훨씬 범용성이 있다고 하신다.
	-나머지 html, jsp도 마찬가지설정
	-콘솔있는탭란에 서버스탭을 왼쪽아래로 가져다놓기
	-window->webbrowser : chrom
		-콘솔창에서 코드를 실행하는게아닌 웹브라우저에서 실행할수있는데 그걸 크롬이 가장 빠름
	
tomcat.apache.org에서 Tomcat(웹서버) 설치
	-자바웹에서는 무료서버는 톰캣사용하고 유료서버는 아마존, 한국의 제우스 등이 있다.
	-톰캣 최신버전다운(현재는 10이지만 강의에서 9를 썻으니 일단 9로 설치)


eclips 서버설정
	-서버탭에 noservers are availa이고 클릭해서 만들어라고 되어있음 서버를
	-그거클릭 후 아파치클릭 -> 가장 아래에 tomcat v9.0server 클릭->next
	-이제 톰켓을 넣어주자. 설치한 9.0폴더를 집어넣어라 경로와함께
	-jre는 workbench default jre로 되어있는데 그대로둬라 -> finish
		-기존에 쓰던 jre쓰겠다는거임 (java 8 jdk설치할때 딸려온거)
	-Tomcat v9.0 server at localhost [Stopped, Republicsh] 생긴것 확인
	-이름 더블클릭
	-서버의 로케이션스이동
		-가운대꺼클릭
			-서버위치는 톰켓의 설치경로를 사용한다. 라는의미
	-server options의 moudules auto reload by default 클릭되어있는 것 확인
	-그후 publicsh module ~~ XML files 체크박스 클릭
		-서버설정을 고칠때 원본에 바로 적용하겠냐? 아니면 사본에 저장해놓고 안전하게 수동으로 적용하겠냐?라는거에서
			체크박스를 클릭하면 수동으로 적용하겠다는 뜻
	-http포트를 8080에서 8181로 수정
		-강의장은 겹치는 포트가많아서 저렇게한다는데 나도 수업들을때 같은 명령을 쳐야하니 일단 똑같이 수정
	-저장버튼(왼쪽젤위쯤에 디스크버튼)눌러서 저장
		-설정을 바꿨지만 우리가 수동으로 안바꿨으니까 여전히 republicsh로 떠있다.
			-즉 아직 적용이 안된거
		-서버탭내에서 우측위에 작은미니탭이 6개있는데 가장 우측 텝클릭(문서모양아이콘?)
			-클릭하면 synchronized로 변경된것을 확인

eclips에서 서버구동테스트
	-서버탭에서 서버 재생버튼 아이콘인 미니탭 클릭
		-콘솔창에 빨간색글자들이 후아아악 지나감
		-정보: 서버가 [10,773] 밀리초 내에 시작되었다 확인
		-그리고 콘솔창에 while돌렸을때처럼 빨간색 네모표시가 활성화되면 서버가 구동중인 것이다.
			-중지버튼이 활성화되어있으면 서버가구동중이며 지인들이 내 url 입력하면 내 웹사이트에 들어와서 사용할수있게
			 할수 있음
			-근데 우리는 아직 사이트를 안만들어놨기때문에 외부에서 접속하면 톰캣기본화면이 뜬다고 한다.
	-http://localhost:8181/ 를 검색
		-localhost가 자기 ip를 자동으로 치는거다.
		-실험결과 자기 컴퓨터에서만 아직까지 들어가지고 다른 컴퓨터에서는 접속불가 (같은 공유기 내의 컴퓨터끼리)
	-중지버튼 클릭후 웹브라우저돌아가서 f5하면 사이트에 연결할수없음이라 뜸
######################################################################################################


























######################################################################################################
예제6) 환경구축
1)
2)
3)
	-색깔
	-? 입력후
		-workspace의 text file encoding을 ? 로 변경
		-web문서인 css, html, jsp 그리고 xml까지 ?로 변경
	-window의 ? 변경

4)
	-?.?.org
	-최신버전설치(사이트에러날경우에는 archive로 들어가라)
	-압축폴더풀기

5)
	-서버탭에 ?클릭
	-?클릭-?에 ? v9.0 클릭-next
	-구축된 무료 서버 관련파일들이 모인 폴더 넣기 
		-jre는 그대로
	-servers에 server하나 생긴것 확인 후 더블클릭
		-서버위치 ?설치위치로 체크(server ?)
		-바로 변경사항 적용이아닌 사본을 만든후 ?으로 적용 체크박스 체크(server ?)
		-?설정(8081로 설정)

6)
	-정지미니텝 우측의 문서처럼 생긴 미니탭클릭하여 사본을 원본으로 수동적용

7)
	-재생버튼클릭
	-정보: 몇초내에 시작된지확인
	-웹서버를 동작시킨 피시에서 자기에게 브라우저를 통해 접속하기
		-url: ?
	-이클립스에서 서버동작 중지시킨후 브라우저에서 새로고침이나 다시 접근
		-연결못하는걸 확인
######################################################################################################



답:



1)자바 se의 jdk설치
2)eclips 설치
3)eclips 환경설정
	-색깔
	-encoding 입력후
		-workspace의 text file encoding을 UTF-8 로 변경
		-web문서인 css, html, jsp 그리고 xml까지 iso unicode utf-8로 변경
	-window의 웹브라우저 chrom 변경

4)구현된 무료서버 설치 tomcat
	-tomcat.apache.org
	-최신버전설치(사이트에러날경우에는 archive로 들어가라)
	-압축폴더풀기

5)이클립스 서버설정(톰캣 서버와 이클립스 연동)
	-서버탭에 크리에이트클릭
	-아파치클릭-가장아래에 tomcat v9.0 클릭-next
	-서버폴더 넣기 
		-jre는 그대로
	-servers에 server하나 생긴것 확인 후 더블클릭
		-서버위치 톰캣설치위치로 체크(server location)
		-바로 변경사항 적용이아닌 사본을 만든후 수동으로 적용 체크박스 체크(server options)
		-포트번호설정(8081로 설정)

6)서버설정변경 적용
	-정지미니텝 우측의 문서처럼 생긴 미니탭클릭하여 사본을 원본으로 수동적용

7)구동테스트
	-재생버튼클릭
	-정보: 몇초내에 시작된지확인
	-웹서버를 동작시킨 피시에서 자기에게 브라우저를 통해 접속하기
		-http://localhost:8081
	-이클립스에서 서버동작 중지시킨후 브라우저에서 새로고침이나 다시 접근
		-연결못하는걸 확인





































######################################################################################################
개념정리_html 파일 만드는법

#코딩작업할때는 서버를 중단하고 해야함
#project explorer에 servers 프로젝트가 자동생성되어있는데 이건 톰켓 설정파일 관련한거니 절대삭제 ㄴㄴ


<프로젝트만들기>
file-new - dynamic web project - 이름설정(JSPBasic)-넥스트x2 - context root, directory가 나옴
		(원래자바만할때는 javaproject를 했지만 지금은 웹프로그래밍이니까 이걸로해야함)
	context root : 초기에 들어온 페이지일때 유알엘 뒤에붙는거
	context directory : 웹을 구성할때 자바클래스파일말고도 필요한 것이 이미지, 음성파일, 영상파일, html문서, css파일 등등
				많은데 그놈들이 저장될 기본폴더
		이것들은 일단 그대로 둔다
	generate web.xml deployment descriptor 체크박스 클릭
		-웹의 기본설정들(사용자가 들어왔을때 로그인이 안된 사용자는 들어오지못하는 페이지라던가 접속했을때 어떤페이지를 메인으로
		 보여줄건가 등의 xml파일을 자동으로 이클립스가 만들어주는거임(main메서드만들때 체크하면 자동만들어주는거랑같음))
	그 후 finish 클릭


<만든후>
JSPBasic 프로젝트클릭후 나오는 Java resources랑 webcontent 폴더가 앞으로 가장 중요한 폴더가될거임
	-java resources
		-src : 자바 클래스나 인터페이스 파일이 드어감
		-libraries: 자바 표준 api lang util 등
	-webcontent: 웹에 필요한 동적, 정적문서, 이미지 등들이 모두 들어감
		-meta-inf
		-web-inf
			-위에서 프로젝트만들때 자동으로 만든 web.xml 파일이 여기에 보관됨
			-lib: 자바표준 api가 아닌 외부에서 제공하는  api(라이브러리)가 들어가는 공간

<프로젝트만들때 자동으로 만들도록 체크하여 만든 web.xml파일을 깜빡하고 안만든경우 해당 프로젝트에 다시 만드는법>
	-우선은 기존의 xml 실습을 위해 삭제한다.
deployment descriptor 우클릭
	-generate deployment descriptor stup 클릭
	-잠시기다리면 web.xml 만들어짐 ^_^

여기까지하면 기본적인 골격이 갖추어진것이다.

<html 파일만들기>
jspbasic 우클릭 new html파일만들기 클릭 하면 자동으로 경로가 webcontent로 된다. 여기가 기타파일들 모두 모아놓는곳이라 했으니까.
이름만 변경하면됨 : hello.html 적고 next 클릭
	html 5인(최신버전)걸 확인하고 finish

<코드작업>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>안녕안뇽!</title>
</head>
<body>
	<h2>이클립스로 html작업하기!</h2>
	<a href = "https://www.naver.com">네이버로 이동~~</a>
	<hr />
	<p> <!-- p태그는 문단을 구성하는 태그임 -->
		안녕안녕?? HTML 시작합니다. JSP 2일차 시간입니다.<br />
		<b>2019년 4월 17일 오전 10시 14분입니다.</b> <!-- b태그는  헤드라이트  -->
	</p>
</body>
</html>


<ctrl f11> : 실행해보기
finish -> 웹브라우저에서 실행해봐라
서버온하겠냐고 물어봄 ok	
	-서버가 안켜지면 웹브라우저에서 서버로 접근해서 실행할수가 없기때문임
그럼 자동으로 브라우저가 내피시의 ip와 8181포트로 접근해서 브라우저를 켜서 해당 html파일을 실행된것을 출력해줌


#jsp url 구성
-제일처음에 도메인주소가 나옴
-그후 포트
-그후 context root	
	-프로젝트생성시 따로 변경안하면 프로젝트이름과 같음
	-그럼네이버는 왜 contextroot가 왜 없지? 지웠기때문이다.
-그후 파일명나옴
-url/context root/파일명





######################################################################################################
































######################################################################################################
개념정리_jsp개념, jsp 파일만들기, jsp태그 


#jsp란?
-현재 위에 개념정리마지막 html코드의 안녕안녕~14분입니다까지를 30번 반복시키고싶다.
하지만 html이 java의 코드를 이해해줄리 만무하다.
그래서 .html이 아니라 .jsp로 변경하면 java를 쓸수있도록 만들어놨다.
이것이 바로~~~ jsp다


<jsp파일 만들기>
프로젝트 우클릭
new-jsp만들기클릭
	-이름만 hello.jsp로 변경후 finish

확인: doctype부터 아래로 모두 똑같지만 그위에page에서 사용할 language는 java이고 utf-8이고 뭐 등등 이 있는것을확인
	-이게 jsp파일의 양식임
실행보기
hello.jsp를 hello.html해서 이전거 나오는가확인


* JSP 문서 작성하기
- JSP 특징
1. 동적 웹어플리케이션 컴포넌트
1. .jsp 확장자
1. 클라이언트의 요청에 동적으로 작동하고, 응답은 HTML을 이용.
1. JSP는 웹서버와 통신시에 자동으로 Servlet으로 변환됨.
1. MVC패턴에서 View로 이용됨.




* JSP 태그의 개념 이해(html에서 해당 태그를 쓰면 안먹힘)
- Servlet은 java언어를 이용하여 문서를 작성하고, 출력객체(PrintWriter)를 이용하여 html 코드를 삽입합니다.
- jsp는 서블릿과 반대로 html코드에 java언어를 삽입하여 동적 문서를 만들 수 있습니다.
- html코드 안에 java코드를 삽입하기 위해서는 jsp태그를 이용해야 하며, 이러한 태그를 학습해야 합니다.



* JSP 태그의 종류
1. 스크립트릿(scriptlet): <%	%> 거의 모든 자바코드 기술 가능.(메서드 내부라고 생각하면된다)
2. 지시자(directive): <%@ %> 페이지 속성을 지정.
3. 선언자(declaration): <%! %> 변수나 메서드 선언시 사용.
4. 표현식(expression): <%= %> 결과 값을 출력할 때 사용.
5. 주석(comments): <%--	--%> 코드 주석처리 시에 사



######################################################################################################

































######################################################################################################
개념정리_스크립트릿



* 스크립트릿(Scriptlet)
- JSP페이지에서 JAVA언어를 사용하기 위한 요소 중 가장 많이 사용하는 태그입니다.
- 스크립트릿 안에는 우리가 알고 있는 거의 모든 JAVA코드를 사용할 수 있습니다.
- 스크립트릿 내부에는 메서드 블록 내부에 기술가능한 코드를 작성할 수 있습니다.
	-메서드내부라고생각했을때
		-try~catch, forif 등 다사용가능
		-메서드 만들기 불가
		-클래스선언 불가(로컬클래스? 그거는된데)
		-import 안됨/패키지선언안됨
		-지역변수가능/멤버변수불가능(클래스에서 만들어야하니까)
		-public private 불가 : 멤버에만붙일수있으니까
	-메서드호출가능 

######################################################################################################





























######################################################################################################
예제7) web project 만들기, html 파일만들기, jsp 파일만들기, scriptlet 태그연습1


* JSP 태그의 종류
1. (): , 거의 모든 자바코드 기술 가능.(메서드 내부라고 생각하면된다)
2. (): , 페이지 속성을 지정.
3. (): , 변수나 메서드 선언시 사용.
4. (): , 결과 값을 출력할 때 사용.
5. (): , 코드 주석처리 시에 사


project: JSPBasic(content root)
webcontent(content directory) 내부에 만들파일 2개
hello.html
hello.jsp

html : body내용은 아래처럼 나오도록

이클립스로 jsp작업하기! //2번째로 큰 제목태그로 작성
네이버로 이동~~ //링크
안녕안녕?? HTML 시작합니다. JSP 2일차 시간입니다. 
2019년 4월 17일 오전 10시 21분입니다. //헤드라이트

jsp : 즉 위의 내용에서 for문으로 네이버로이동이란 링크를 50개 돌려보고싶은거였는데 실패했다.
	jsp면 자바의 코드를 알아먹는다메? 근데 왜못먹냐? 이런 상황인거다.
	이걸 고쳐라
	-폴더이름: JspTag
	-파일이름: scriptlet.jsp


이클립스로 jsp작업하기!
for(int i=1;i<51;i++){ 네이버로 이동~~ }
안녕안녕?? HTML 시작합니다. JSP 2일차 시간입니다.

2019년 4월 17일 오전 10시 21분입니다.정말 난많이 


#브라우저에서 자바가 포함된 jsp를 실행하면 자바코드가 보이지않는다.
	-이게바로 자바에서 말하는 자비코드를 노출되지 않는다. 라는 것의 의미라한다.

######################################################################################################



답:



* JSP 태그의 종류
1. 스크립트릿(scriptlet): <%	%> 거의 모든 자바코드 기술 가능.(메서드 내부라고 생각하면된다)
2. 지시자(directive): <%@ %> 페이지 속성을 지정.
3. 선언자(declaration): <%! %> 변수나 메서드 선언시 사용.
4. 표현식(expression): <%= %> 결과 값을 출력할 때 사용.
5. 주석(comments): <%--	--%> 코드 주석처리 시에 사




<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>안녕안뇽!</title>
</head>
<body>
	<h2>이클립스로 html작업하기!</h2>
	<a href = "https://www.naver.com">네이버로 이동~~</a>
	<hr />
	<p> <!-- p태그는 문단을 구성하는 태그임 -->
		안녕안녕?? HTML 시작합니다. JSP 2일차 시간입니다.<br />
		<b>2019년 4월 17일 오전 10시 14분입니다.</b> <!-- b태그는  헤드라이트  -->
	</p>
</body>
</html>





<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
	<meta charset="UTF-8">
	<title>jsp입니다.</title>
</head>
<body>
	<h2>이클립스로 jsp작업하기!</h2>
	for(int i=1;i<51;i++){
		<a href = "https://www.naver.com">네이버로 이동~~</a>
	}
	<hr />
	
	<p> <!-- p태그는 문단을 구성하는 태그임 -->
		안녕안녕?? HTML 시작합니다. JSP 2일차 시간입니다.<br />
		<b>2019년 4월 17일 오전 10시 21분입니다.</b> <!-- b태그는  헤드라이트  -->
	</p>
	
	정말 난많이 ~~ 그대를 많이 아파 했는데~
</body>
</html>


content directory 우클릭 - 뉴 - 폴더 - JspTag로 만들기
폴더 우클릭-뉴-JSP파일


<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>

<% for(int i=0; i<10; i++){%>

<h2>이클립스와 톰캣으로 JSP파일 렌더링하기~~</h2>

<p>
안녕하세요. 오늘은 2019년 4월 17일 수요일입니다. <br />
<i>스크립트릿 연습을 하고 있습니다.</i>
</p><hr />

<%} %>

</body>
</html>



























######################################################################################################
예제8) scriptlet 태그 연습2

1)아래출력결과처럼 나오게 구구단 작성하라

구구단 2단 	//이건 크게
	//여긴 구분선
2x1 = 2
2x2 = 4
2x3 = 6
2x4 = 8
2x5 = 10
2x6 = 12
2x7 = 14
2x8 = 16
2x9 = 18


2)반복문과 조건문을 이용하여 구구단 홀수단(3,5,7,9)를 출력해보세요.

######################################################################################################






답:





<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>

<% for(int i=0; i<2; i++){%>

<h2>이클립스와 톰캣으로 JSP파일 렌더링하기~~</h2>

<p>
안녕하세요. 오늘은 2019년 4월 17일 수요일입니다. <br />
<i>스크립트릿 연습을 하고 있습니다.</i>
</p><hr />

<%} %>

<h2>구구단 2단</h2> <hr />

<%
	for(int hang=1;hang<=9;hang++){
		//out.print 메서드는 브라우저에 출력을 실행하는 메서드임
		//System.out.println 은 시스템에 출력(콘솔에 출력)
		out.println("2x"+hang + " = " + (2*hang) + "<br />");
	}

%>

<h2>구구단에서 홀수단만 출력합니다.</h2>

<%
	for(int dan=2;dan<=9;dan++){
		if(dan % 2 == 0) continue;
		for(int hang=1;hang<=9;hang++){
			out.println(dan + " x " + hang + " = " + dan*hang
					+ "<br />");
		}
	}
%>



</body>
</html>




































######################################################################################################
개념정리_jsp 태그

클래스 
-가능
	-멤버변수 선언(선언과 동시에초기화), 메서드 선언, 접근제한자, 사용제한자 가능
-불가능	
	-멤버변수 값변경 및 선언 후 초기화
	-메서드 호출 불가 멤버변수 호출 불가
	

메서드 내부에서 가능(생성자블록도 가능)
-가능
	-메서드 호출, 멤버변수 호출, 지역변수 생성, 지역변수 값변경, 멤버변수 값변경
-불가능
	-메서드 생성, 멤버변수 생성, 제한자 불가

#참고: 지역변수는 반드시 초기화해서 사용해야함 멤버변수는 기본값초기화됨
	-그리고 초기화하기위해 r-value로 함수호출하는건 클래스에서도 가능함 

* 선언(Declaration) 데클라레이션
- JSP 페이지 내에서 사용되는 변수 또는 메서드를 선언할 때 사용합니다.
- 여기 선언된 변수 및 메서드는 전역의 의미로 사용됩니다.
	-스크립트릿 내부의 내용은 메서드 내에서 나올수 있는 범위만 나올수있는내용이라면
		선언(declaration) 내부의 내용은 클래스의 내부에서 나올수있는 멤버변수 및 멤버메서드가 나올수 있는 내용인것이다.
			-public private 붙이기가능
			-메서드 선언정의 가능
			-클래스블록 내부다 라고 보면 됨




- JSP 아키텍쳐(구동원리): .jsp파일을 실행(요청)하면 웹 서버에서 우선 jsp파일을 java코드로 변환합니다. 그 이후 그 파일을 컴파일하고 html로 응답합니다.     
 ex)웹브라우저 -> helloworld.jsp -> helloworld_jsp.java(서버에서 servlet화) -> helloworld_jsp.class(서블릿 클래스 컴파일) -> html(응답)
				이걸 서블릿클래스라함					서블릿클래스를 컴파일한 파일

* 표현식(Expression)
- JSP 페이지 내에서 사용되는 변수의 값 또는 메서드 호출 결과 값을 출력하기 위해 사용됩니다.
- 결과 값의 데이터 유형은 String이며, 세미콜론(;)을 사용할 수 없습니다.
- 표현식은 out.println()을 대체합니다.


* 주석(Comments) -> 매우 비밀스럽고 중요할시의 주석 (페이지소스보기를해도 안나옴)
	즉 html 주석보다 jsp 주석이 더 강하다
- 실제 프로그램 실행에는 영향이 없고, 프로그램 설명 등의 목적으로 사용되는 태그입니다.
- HTML 및 JSP 주석이 각각 별도로 존재합니다.
- HTML 주석은 <!--	--> 표기하고, 웹 브라우저에서 페이지 소스보기를 하면 주석도 표기됩니다.
- JSP 주석은 <%-- --%> 표기하고, 웹 브라우저에서 소스보기를 해도 나타나지 않습니다.
- JAVA의 주석도 혼용 사용 가능합니다.(//  ,  /*	~~~ */)

* 지시자(directive)
- JSP페이지의 전체적인 속성을 지정할 때 사용합니다.
1. page: JSP페이지에 대한 정보를 지정한다. JSP가 생성하는 문서의 타입, 출력 버퍼의 크기, 에러 페이지 등 페이지에서 필요로 하는 정보를 설정합니다.

- 페이지 디렉티브에 선언 될 수 있는 속성들
a. language - 언어를 지정합니다. java만 지정할 수 있습니다.
a. import - 패키지를 import할 때 사용합니다.
a. errorPage - 설정 된 페이지에서 에러가 발생했을 시에 미리 만들어 둔 에러 페이지를 호출합니다.
a. contentType - text/html이라고 쓰면 결과가 HTML문서로 만들어집니다.
a. pageEncoding - 출력 문자 인코딩입니다. 기본은 ISO-8859-1이며 한글을 사용하려면 utf-8로 지정합니다.
a. trimDirectiveWhitespaces - 디렉티브나 스크립트릿 코드로 인해서 만들어진 공백 문자를 제거하는 기능.

1. include: JSP 페이지의 특정 영역에 다른 문서를 포함시킵니다.

1. taglib: JSP 페이지에서 사용할 태그 라이브러리를 지정합니다.


######################################################################################################


































######################################################################################################
예제9) 구동원리, expression

1)클라이언트가 서버에 출력을 요청했을때 구동원리
	jsp에서 서블릿이 java파일로 변경하는 과정 두눈으로 확인하라


- JSP 아키텍쳐(구동원리): .jsp파일을 실행(요청)하면 웹 서버에서 우선 jsp파일을 java코드로 변환합니다. 그 이후 그 파일을 컴파일하고 html로 응답합니다.     
 ex)웹브라우저 -> helloworld.jsp -> helloworld_jsp.java(서버에서 servlet화) -> helloworld_jsp.class(서블릿 클래스 컴파일) -> html(응답)
				이걸 서블릿클래스라함					서블릿클래스를 컴파일한 파일


2)expression(표현식)
  declaration을 이용해서 서블릿화 했을시의 public한 멤버변수 String name을 만들고 스크립트릿을 이용하여 지역변수 String address를
  선언하면서 동시에 각각 홍길동, 서울시로 저장하라.
 	-그후 html양식에서 이름: 홍길동\n 주소: 서울시\n 으로 웹브라우저에 출력가능하도록 만들어라.

2-2)그후 이것도 .java로 만들어진 파일 확인해서 _jspService() 메소드에 어떤식으로 작용되었는지 확인하라
		-out.print()임
 

3)comments(주석)
  scriptlet을 이용하여 java의 한줄주석과 여러줄주석을 적어보고 html에서 html 주석과 jsp주석을 사용해보아라
	실행하여 그 차이점도 인지하여라
		-차이점: jsp가 더욱 강력한 주석임


4)directive(지시자)
  Date 클래스를 이용하여 [오늘은 2021년 00월 00일] 형식으로 그날 날짜에 맞게 브라우저에서 출력되도록하라
  

######################################################################################################






답:




2)expression(표현식)




<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
    
<%!
	public String name = "홍길동";
%>
<%
	String address = "서울시"; 
%>
    
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>

<!-- 표현식은 out.print()를 대체함
	out.print하면 나중에 쌍따옴표에다가 + 등을 적어야하고 번거롭다. -->

이름: <%= name %> <br /> <!-- out.print("이름"+name+"<br />"); -->
주소: <%= address %> <br />

</body>
</html>





3)comments(주석)



<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>

<%
	//int a = 10;
	/*
	여러줄주석
	*/
	
%>

<!-- HTML 주석입니다. -->
여기는 주석이 아닙니다. <br />
<%-- JSP주석입니다. --%>
여기는 주석이 아닙니다. <br />

</body>
</html>



4)directive(지시자)
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8" import = "java.io.*" import = "java.util.*"%>
    
<%-- 외부패키지 임포트 방법 --%>
<%--@ page import = "java.util.Date" 이렇게도 되고 위에서 넣어도됨--%>
<%@ page import="java.text.SimpleDateFormat"%>

<%
	//java.util.Date date = new java.util.Date();
	Date date = new Date();
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy년 MM월 dd일");
	String dayInfo = sdf.format(date);
%>

<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>

오늘은 <%= dayInfo %>

</body>
</html>


















































































































21.09.23_3회차
=======================================================================================================
*jsp태그복습, 리스트복습(로또,역할파티), 지시자(include,trimDW)
=======================================================================================================






































































































######################################################################################################
예제10) declaration, scriptlet, directive, expression 복습


jsp파일명: tag_quiz00


오늘의 운세!				//가장큰 제목

페이지 누적요청수: 9, 페이지 개별 요청수: 1	//페이지 누적요청수는 올라가고 페이지 개별요청수는 올라가지 않는다.

오늘의 행운의 숫자와 행운의 색깔			//두번째로 큰 제목
					//문단으로 아래 두줄감싸기
행운의 숫자: 2				//2 정수부는 헤드라이트 골드체				
행운의 색깔: 파랑				//기울임체(이텔리체)

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
    
<%! 
	//Declaration
	//jsp파일에서 사용할 멤버변수, 메서드를 선언할때 사용
	
	public int total;
	public int randomNumber(){
		//랜덤정수 1~10까지를 발생시켜서 리턴
		return 0;
	}
	
	public String randomColor(){
		
		/*
		0.0이상 1.0미만의 실수 난수를 발생시켜서 난수값이 0.66이상이면 "빨강"을 0.33 이상이면
		"노랑", 그 이외에는 "파랑"을 리턴
		*/
		return null;
	}
	
%>
    
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>


</body>
</html>
######################################################################################################



답:



<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ page import = "java.util.Random" %>
    
<%! 
	//Declaration
	//jsp파일에서 사용할 멤버변수, 메서드를 선언할때 사용
	
	public int total;
	public String color;
	public int num;
	public Random r = new Random();
	
	public int randomNumber(){
		//랜덤정수 1~10까지를 발생시켜서 리턴
		num = r.nextInt(10)+1;
		return num;
	}
	
	
	public String randomColor(){		
		/*
		0.0이상 1.0미만의 실수 난수를 발생시켜서 난수값이 0.66이상이면 "빨강"을 0.33 이상이면
		"노랑", 그 이외에는 "파랑"을 리턴
		*/
		double num = r.nextDouble();
		
		if(num>=0.66){
			color = "빨강"; //여기 리턴을 둘수도 있음
		} else if(num>=0.33){
			color = "노랑";
		} else{
			color = "파랑";
		}
		
		return color;
	}
	
%>

<%
	total++;
	int each=0;
	each++;
	
	num = randomNumber();
	color = randomColor();
%>
    
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>

<h1>오늘의 운세!</h1>

페이지 누적요청수: <%= total%>, 페이지 개별 요청수: <%= each%> 

<h2>오늘의 행운의 숫자와 행운의 색깔</h2>

<p>
행운의 숫자: <strong><%= num%></strong> <br />
행운의 색깔: <em><%= color%></em> 
</p>

</body>
</html>


















######################################################################################################
예제11) declaration, scriptlet, directive, expression 복습

jsp파일명: tag_quiz01

1)아래처럼 10번째면 나오게하고 10번째가 아니면 아무문구 안뜨게 하라

페이지 누적 요청수 : 30
매 10번째 방문자에게는 기프티콘을 드립니다.
당첨되셨습니다!!
		//구분선
랜덤 구구단(7단)	//가장 큰제목

이번에 나온 구구단은 7단입니다. //문단구분

7 x 1 = 7
7 x 2 = 14
7 x 3 = 21
7 x 4 = 28
7 x 5 = 35
7 x 6 = 42
7 x 7 = 49
7 x 8 = 56
7 x 9 = 63


2)그런다음 자바의 코드가 페이지소스보기에 안보이는지 확인해라
	-확인해보니 안보이긴하는데 doctype위에 빈칸들이있네.. 즉 자바의 발자취가 남았다는 뜻
	-이걸없애라



######################################################################################################



답:

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ page import = "java.util.Random" trimDirectiveWhitesapces = "true"%>
    
<%!
private int total;
private Random r = new Random();

public int randomDan(){
	return r.nextInt(8)+2;
}

public boolean checkTotal(){
	if(total%10==0){
		return true;
	}
	return false;
}
%>
<% 
total++;
int num = randomDan();
%>
    
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>

페이지 누적 요청수 : <%= total %> <br />
매 <strog>10</strog>번째 방문자에게는 기프티콘을 드립니다. <br />
<% 
if(checkTotal()) out.print("당첨되셨습니다!!");	
%> 
<hr />

<h1>랜덤 구구단(<%=num%>단) </h1>

<p>이번에 나온 구구단은 <%=num%>단입니다.</p>

<%for(int hang=1;hang<10;hang++){
	int result = num*hang;
%>

<%=num%> x <%=hang%> = <%=result%> <br />
<%} %>


</body>
</html>
















######################################################################################################
예제12) 리스트를 통한 랜덤로또 만들기


jsp파일명: tag_quiz02


1)리스트를 이용하면 랜덤로토만들기가 얼마나편한지 느껴보시오
	-중복검사코드를 따로 안만들어도됨
	-while문에 굳이 i라는 begin을 만들고 end설정을 하고 스텝으로 더할필요가없음

이때 로또번호는 0.7초간격으로 하나식 출력되게하라.(당연히 번호는 정렬되어 나와야한다.)
	



로또번호 생성 결과		//가장큰제목
이번주 로또는 이 번호다!!
12 13 14 28 39 41 	//로또번호는 0.7초당 하나식 나오도록(최초의 것은 바로나오고)
	//여기나오는 공백은 " "가 아닌 html상의 공백문자를 사용하라

######################################################################################################



답:



<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
    
<%@ page import = "java.util.Random" import = "java.util.*" %>

<%!
private Random r = new Random();
List<Integer> lotto = new ArrayList<>();
%>

<%
	lotto.clear();
	while (lotto.size() < 6) {
		int num = r.nextInt(45) + 1;
		if (!lotto.contains(num)) {
			lotto.add(num);
		}
	}
	
	
	Collections.sort(lotto);
	//String lo = lotto.toString();
%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>

<h1>로또번호 생성 결과</h1>

이번주 로또는 이 번호다!!<br />
<%-- lo --%>
<% 
for(int j=0;j<lotto.size();j++){
	out.print(lotto.get(j)+"&nbsp;");
	Thread.sleep(700);//cpu를 잠시 멈추는 메서드
	out.flush(); //브라우저의 출력버퍼를 비우는 메서드
}
%>

<br />


</body>
</html>
















######################################################################################################
개념정리_지시자(directive) 태그의 종류(page,include,taglib)와 page 및 include 지시자태그의 속성 



* 지시자(directive)
- JSP페이지의 전체적인 속성을 지정할 때 사용합니다.
1. page: JSP페이지에 대한 정보를 지정한다. JSP가 생성하는 문서의 타입, 출력 버퍼의 크기, 
	에러 페이지 등 페이지에서 필요로 하는 정보를 설정합니다.

- 페이지 디렉티브에 선언 될 수 있는 속성들
a. language - 언어를 지정합니다. java만 지정할 수 있습니다.
a. import - 패키지를 import할 때 사용합니다.
a. errorPage - 설정 된 페이지에서 에러가 발생했을 시에 미리 만들어 둔 에러 페이지를 호출합니다.
a. contentType - text/html이라고 쓰면 결과가 HTML문서로 만들어집니다.
a. pageEncoding - 출력 문자 인코딩입니다. 기본은 ISO-8859-1이며 한글을 사용하려면 utf-8로 지정합니다.
a. trimDirectiveWhitespaces - 디렉티브나 스크립트릿 코드로 인해서 만들어진 공백 문자를 제거하는 기능.

1. include: JSP 페이지의 특정 영역에 다른 문서를 포함시킵니다.(jspf, jsp 모두 가능)
a. file -포함해야할 문서 jspf의 위치를 상대 또는 절대경로로 value를 넣어주는 속성이다.

1. taglib: JSP 페이지에서 사용할 태그 라이브러리를 지정합니다.


- JSP 아키텍쳐
: .jsp파일을 실행(요청)하면 웹 서버에서 우선 jsp파일을 java코드로 변환합니다. 그 이후 그 파일을 컴파일하고 html로 응답합니다.      
ex) helloworld.jsp -> helloworld_jsp.java(서버에서 servlet화) -> helloworld_jsp.class(서블릿 클래스 컴파일)
######################################################################################################

















######################################################################################################
예제13) directive의 include(jspf)





1)아래 요구사항을 충족하라(include할때 상대경로로 한번하고 절대경로로한번해라)

jspf파일이름: directive02_header directive02_footer
		-header에선 출력내용을 넣지말고 오로지 자바코드로 visit을 만들고 방문자가 올때마다 더하는 코드를 만들어라
jspf를 포용할 jsp 파일이름: directive02_main

방문자수 : 8	//방문자수 : 까지 jsp, 8은 jspf에서 선언한 변수를 불러오기
안녕하세요~~~ welcome to my website!!!	//jsp
						//구분선	//jspf
COPYRIGHT BY C.G.J / since 2019.04.18 ~		//jspf
						//구분선 //jspf

2)directive02_header의 내용을 방문자수 : 8 을 출력하는걸로 변경하고 그걸 lotto나 다른 jsp에도 include해서
	잘나오는가 확인하라
	-위에는 header를 저렇게한게 변수를 만들고 변수를 끌어올수 있다는것을 공부하기위한 목적이고 지금은 범용성 실습의 목적임



#jspf: jsp와 다르게 항상 머리 또는 꼬리에 조각처럼 들어가야할 녀석이라고해서 fragment(조각)를 붙여서 jsp와 구분한다. jspf
	-가시적으로 빠르게 아 이것은 머리와 꼬리에 항상 들어가는 include해야할 파일이구나 라는것을 알기위한것
		-jspf만 include되는것이 아닌 jsp도 인클루드 가능함! 가시성을 위해 jspf

######################################################################################################



답:




1)아래 요구사항을 충족하라(include할때 상대경로로 한번하고 절대경로로한번해라)


//directive02_header
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
    
<%! int visit; %>
<% visit++; %>


//directive02_footer
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>

<hr/>
COPYRIGHT BY C.G.J / since 2019.04.18 ~
<hr/>


//directive02_main
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>

<%@ include file="directive02_header.jspf" %>
<h2>방문자수 : <%= visit %></h2>

<p>
안녕하세요~~~ welcome to my website!!!
</p>

<%@ include file="directive02_footer.jspf" %>
</body>
</html>



2)directive02_header의 내용을 방문자수 : 8 을 출력하는걸로 변경하고 그걸 lotto나 다른 jsp에도 include해서
	잘나오는가 확인하라

//directive02_header 내용 변경
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
 
<%! int visit; %>
<% visit++; %>
<h2>방문자수 : <%= visit %></h2>


//expression.jsp
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>

<%@ include file = "directive02_header.jspf" %>  

  
<%!
	public String name = "홍길동";
%>
<%
	String address = "서울시"; 
%>
    
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>

<!-- 표현식은 out.print()를 대체함
	out.print하면 나중에 쌍따옴표에다가 + 등을 적어야하고 번거롭다. -->

이름: <%= name %> <br /> <!-- out.print("이름"+name+"<br />"); -->
주소: <%= address %> <br />

</body>
</html>



















######################################################################################################
예제14) 게임파티로직 작성을통한 리스트실습


jsp파일명: tag_quiz03

당신의 역할
당신에게 부여된 역할은 사냥꾼입니다.
현재 파티에 당신과 같은 역할을 가진 플레이어는 1명입니다.	//이거 직업군 인원 셀때 배열쓰지말고 다른걸로 해라

현재 파티 구성
[도적, 전사, 사냥꾼](3명 참가중)	



0)직업: 도적, 사냥꾼, 전사, 사제 

1)브라우저에서 서버에 요청할때마다(f5할때마다) 사용자에게 임의의 역할(직업)을 부여하고 현재 파티에서 해당사용자를 포함하여 몇명이 
  임의의 역할을 가지고 있는지 출력하시오.

2)현재 파티구성에서 먼저 들어온 사용자순으로 역할을 나열하고 총 몇명 참가중인지 나타내시오

3)참가중인 파티는 10명까지 가능하며 10명이 넘으면 다시 임의의 역할을 주고 1명부터 시작함

#헤드라이트는 strong 태그, b태그 모두 가능한데 strong을 많이 쓰는 추세라고 한다.
#리스트는 리스트변수 이름만 출력에 넣어도 주소가나오는게아닌 toString()의 반환값으로 나온다는것을 반드시 인지할것
#<%= party.size() %> 가 된다는것 명심 즉 반환값으로 기본값만 나오면됨 그럼 그걸 문자열로 만들어서 브라우저에 출력함
######################################################################################################










답<직업군 플레이어 수 배열안쓰고 푼것>:


<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ page import = "java.util.List" import = "java.util.ArrayList" %>
<%!
List<String> party = new ArrayList<>();
%>
 
 
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>


<h1>당신의 역할</h1>

<%
String[] jobs = {"도적", "사냥꾼", "전사", "사제", "마법사"};
int r = (int)(Math.random()*jobs.length);
if(party.size() == 10) party.clear();
party.add(jobs[r]);

int count = 0;
for(int i=0;i<party.size();i++){
	if(party.get(i)==jobs[r]) count++;
}


%>

당신에게 부여된 역할은 <strong><%= party.get(party.size()-1) %></strong>입니다.<br />
현재 파티에 당신과 같은 역할을 가진 플레이어는 <%= count %>명입니다.
<hr />

현재 파티 구성<br />
<%= party %>(<%= party.size() %>명 참가중)

</body>
</html>














답<직업군 플레이어 수 배열쓴거>:

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>

<%@ page import = "java.util.List" import = "java.util.ArrayList" 
	import = "java.util.Collections" import = "java.util.Random"%>
    
<%!
private String[] jobs = {"도적", "사냥꾼", "사제", "전사"};
private List<String> party = new ArrayList<>();
private int[] jobNums = new int[4]; //이렇게 직업수를 정하는법도있고
						//contains로 true일때마다 count를 1식늘리는방법도있다.
private int num;

private Random r = new Random();

public void setParty(){
	num = r.nextInt(jobs.length);
	party.add(jobs[num]); 
	
	jobNums[num]++;
}

public void checkParty(){
	if(party.size()==10){
		party.clear();
		for(int i=0;i<jobNums.length;i++){
			jobNums[i] = 0;
		}
	}
}
%>   
    
<%
checkParty();
setParty();
String job = party.get(party.size()-1);
int jobNum = jobNums[num];

String partyJob = party.toString();
int partyTot = party.size();
%>

    
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>

<h1>당신의 역할</h1>

당신에게 부여된 역할은 <%= job %>입니다. <br />
현재 파티에 당신과 같은 역할을 가진 플레이어는 <%= jobNum %>명입니다. <br /> <br />


현재 파티 구성 <br />
<%= partyJob %>(<%= partyTot %>명 참가중) <br />

</body>
</html>









